/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  faqItems?: Array<{
    question?: string;
    response?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    _type: "faqItem";
    _key: string;
  }>;
};

export type TopTourSummary = {
  _id: string;
  _type: "topTourSummary";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  slug?: Slug;
  title?: string;
  description?: string;
  promoTitle?: string;
  promoDescription?: string;
  travel?: string;
  cities?: string;
  accommodation?: string;
  meals?: string;
  tripCode?: string;
  travelHighlights?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "travelHighlights";
  };
  sightseeingHighlights?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sightseeingHighlights";
  };
  itinerary?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "itinerary";
  };
};

export type Itinerary = {
  _id: string;
  _type: "itinerary";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  topTourSummaryTitle?: string;
  topTourSummary?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "topTourSummary";
  };
  title?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  itineraryItems?: Array<{
    day?: number;
    experienceType?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "experienceType";
    };
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    title?: string;
    description?: string;
    cities?: Array<string>;
    meals?: Array<string>;
    accommodation?: Array<string>;
    arrivalTransfer?: string;
    departureTransfer?: string;
    welcome?: string;
    experiences?: Array<{
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      title?: string;
      description?: string;
      experienceType?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "experienceType";
      };
      price?: number;
      _type: "experience";
      _key: string;
    }>;
    _type: "itineraryItem";
    _key: string;
  }>;
};

export type ExperienceType = {
  _id: string;
  _type: "experienceType";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  bgColor?: string;
  textColor?: string;
};

export type SightseeingHighlights = {
  _id: string;
  _type: "sightseeingHighlights";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  topTourSummaryTitle?: string;
  topTourSummary?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "topTourSummary";
  };
  menuTitle?: string;
  title?: string;
  cta?: {
    ctaTitle?: string;
    slug?: string;
    description?: string;
  };
  firstHighlights?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  secondHighlights?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type TravelHighlights = {
  _id: string;
  _type: "travelHighlights";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  topTourSummaryTitle?: string;
  topTourSummary?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "topTourSummary";
  };
  title?: string;
  cta?: {
    ctaTitle?: string;
    slug?: string;
    description?: string;
  };
  firstHighlights?: Array<string>;
  secondHighlights?: Array<string>;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | Faq | TopTourSummary | Itinerary | ExperienceType | SightseeingHighlights | TravelHighlights | Slug | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries.ts
// Variable: TOP_TOUR_SUMMARIES_QUERY
// Query: *[_type == "topTourSummary"] {    ...,    slug,    travelHighlights->{      ...,    },    sightseeingHighlights->{      ...,    }  }
export type TOP_TOUR_SUMMARIES_QUERYResult = Array<{
  _id: string;
  _type: "topTourSummary";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  slug: Slug | null;
  title?: string;
  description?: string;
  promoTitle?: string;
  promoDescription?: string;
  travel?: string;
  cities?: string;
  accommodation?: string;
  meals?: string;
  tripCode?: string;
  travelHighlights: {
    _id: string;
    _type: "travelHighlights";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    topTourSummaryTitle?: string;
    topTourSummary?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "topTourSummary";
    };
    title?: string;
    cta?: {
      ctaTitle?: string;
      slug?: string;
      description?: string;
    };
    firstHighlights?: Array<string>;
    secondHighlights?: Array<string>;
  } | null;
  sightseeingHighlights: {
    _id: string;
    _type: "sightseeingHighlights";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    topTourSummaryTitle?: string;
    topTourSummary?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "topTourSummary";
    };
    menuTitle?: string;
    title?: string;
    cta?: {
      ctaTitle?: string;
      slug?: string;
      description?: string;
    };
    firstHighlights?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    secondHighlights?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  } | null;
  itinerary?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "itinerary";
  };
}>;
// Variable: TOP_TOUR_SUMMARY_QUERY
// Query: *[_type == "topTourSummary" && slug.current == $slug][0] {    ...,    travelHighlights-> {      ...,    },    sightseeingHighlights-> {      ...,    },    itinerary-> {      ...,      itineraryItems[] {        ...,        experienceType->,          experiences[] {          ...,          experienceType->,      },      }    }  }
export type TOP_TOUR_SUMMARY_QUERYResult = {
  _id: string;
  _type: "topTourSummary";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  slug?: Slug;
  title?: string;
  description?: string;
  promoTitle?: string;
  promoDescription?: string;
  travel?: string;
  cities?: string;
  accommodation?: string;
  meals?: string;
  tripCode?: string;
  travelHighlights: {
    _id: string;
    _type: "travelHighlights";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    topTourSummaryTitle?: string;
    topTourSummary?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "topTourSummary";
    };
    title?: string;
    cta?: {
      ctaTitle?: string;
      slug?: string;
      description?: string;
    };
    firstHighlights?: Array<string>;
    secondHighlights?: Array<string>;
  } | null;
  sightseeingHighlights: {
    _id: string;
    _type: "sightseeingHighlights";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    topTourSummaryTitle?: string;
    topTourSummary?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "topTourSummary";
    };
    menuTitle?: string;
    title?: string;
    cta?: {
      ctaTitle?: string;
      slug?: string;
      description?: string;
    };
    firstHighlights?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    secondHighlights?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
  } | null;
  itinerary: {
    _id: string;
    _type: "itinerary";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    topTourSummaryTitle?: string;
    topTourSummary?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "topTourSummary";
    };
    title?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    itineraryItems: Array<{
      day?: number;
      experienceType: {
        _id: string;
        _type: "experienceType";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        title?: string;
        bgColor?: string;
        textColor?: string;
      } | null;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      title?: string;
      description?: string;
      cities?: Array<string>;
      meals?: Array<string>;
      accommodation?: Array<string>;
      arrivalTransfer?: string;
      departureTransfer?: string;
      welcome?: string;
      experiences: Array<{
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        title?: string;
        description?: string;
        experienceType: {
          _id: string;
          _type: "experienceType";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          title?: string;
          bgColor?: string;
          textColor?: string;
        } | null;
        price?: number;
        _type: "experience";
        _key: string;
      }> | null;
      _type: "itineraryItem";
      _key: string;
    }> | null;
  } | null;
} | null;
// Variable: FAQ_QUERY
// Query: *[_type == "faq"][0] {  ...}
export type FAQ_QUERYResult = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  faqItems?: Array<{
    question?: string;
    response?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    _type: "faqItem";
    _key: string;
  }>;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"topTourSummary\"] {\n    ...,\n    slug,\n    travelHighlights->{\n      ...,\n    },\n    sightseeingHighlights->{\n      ...,\n    }\n  }": TOP_TOUR_SUMMARIES_QUERYResult;
    "\n  *[_type == \"topTourSummary\" && slug.current == $slug][0] {\n    ...,\n    travelHighlights-> {\n      ...,\n    },\n    sightseeingHighlights-> {\n      ...,\n    },\n    itinerary-> {\n      ...,\n      itineraryItems[] {\n        ...,\n        experienceType->,\n          experiences[] {\n          ...,\n          experienceType->,\n      },\n      }\n    }\n  }\n": TOP_TOUR_SUMMARY_QUERYResult;
    "*[_type == \"faq\"][0] {\n  ...\n}": FAQ_QUERYResult;
  }
}
